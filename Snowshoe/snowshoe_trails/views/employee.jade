extends layout 
block content
  ul
    li
        a(href='..') Home
      |   
    |   
    li.dropdown
      a.dropbtn(href='javascript:void(0)') Update Rider Map
      |     
      .dropdown-content   
        div(name='statusButton', id = "updateStatus") Update Trail Status
        div(name='difficultyButton', id="updateDifficulty") Update Trail Difficulty      
        div(name='featureadd', id='featureadd') Create New Feature 
        div(name='updateEmergency', id='emergencyadd') Update Emergency Access

  #statusDiv
    a.close(id="closeButtonTrail")
    form(action='/updateStatus' method='POST')     
        label(for='trail') Select Trail     
        select#trail(name='trail' required)
          for trail in trails
            option=trail.properties.f2            
        label(for='status') Open/Closed
        select#status(name='status') 
          option(value='open') Open
          option(value='closed') Closed
        label(for='message') Status Message    
        input#statusMessage(type='text', name='message', placeholder='Trail construction...')   
        input(type='submit', name='submit', value='Submit')
  #difficultyDiv 
    a.close(id="closeButtonDifficulty")
    form(action='/updateDifficulty' method='POST')
      label(for='trail') Select Trail
      select#trail(name='trail' required)
        for trail in trails 
          option=trail.properties.f2
      label(for='difficulty') Choose Difficulty 
      select#difficulty(name='difficulty')
        option(value='beginner') Beginner
        option(value='intermediate') Intermediate 
        option(value='advanced') Advanced 
        option(value='expert') Expert
      input(type='submit', name='submit', value='Submit')
  #newFeature
    a.close(id="closeButtonFeat")
    form(action='/statusupdate' method='POST')
        label(for='fname') First Name
        |     
        input#fname(type='text', name='firstname', placeholder='Your name..')
        |     
        label(for='lname') Last Name
        |     
        input#lname(type='text', name='lastname', placeholder='Your last name..')
        
        label(for='featureName') Feature Name
        
        input#featname(type='text', name='featname', placeholder='Big Jump....')
        
        label(for='featuretype') Feature Type
        
        select#featureType(name='ftype' required)
          option(value='Jump') Jump      
          option(value='Wood Ramp') Wood                 
          |     
        input(type='submit', value='Submit')

  #map
  script.
    var updateStatus = document.querySelector('#updateStatus');
    sl = document.querySelector('#statusDiv')
    updateStatus.addEventListener('click',()=>{
      if (sl.style.display == 'none') {
        sl.style.display = 'block';
      } else {
        sl.style.display ='none';
      }
    });

    var updateDifficulty = document.querySelector('#updateDifficulty');
    ud = document.querySelector('#difficultyDiv')
    updateDifficulty.addEventListener('click', ()=>{
      if (ud.style.display == 'none') {
        ud.style.display = 'block';
      } else {
        ud.style.display = 'none';
      }
    });

    var updateFeature = document.querySelector('#featureadd');
    fa = document.querySelector('#newFeature')
    updateFeature.addEventListener('click', ()=>{
      if (fa.style.display == 'none') {
        fa.style.display = 'block';
      } else {
        fa.style.display = 'none';
      }
    });

    var trailClose = document.querySelector('#closeButtonTrail');
    trailClose.addEventListener('click', ()=>{
      sl.style.display = 'none'
      fa.style.display = 'none'
      ud.style.display = 'none'
    });
    var featClose = document.querySelector('#closeButtonFeat');
    featClose.addEventListener('click', ()=>{
      fa.style.display = 'none'
      sl.style.display = 'none'
      ud.style.display = 'none'
    });
    var diffClose = document.querySelector('#closeButtonDifficulty');
    diffClose.addEventListener('click', ()=>{
      ud.style.display = 'none'
      sl.style.display = 'none'
      fa.style.display = 'none'
    })
      var myData = !{JSON.stringify(jsonData)};
    // Create variable to hold map element, give initial settings to map
      var map = L.map('map',{ center: [38.41514, -79.98964], zoom: 15});
      // Add OpenStreetMap tile layer to map element
      L.tileLayer('https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}{r}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>'
      }).addTo(map);

      console.log(myData)


      // set variable for all trails
      L.geoJson(myData,{
          onEachFeature: function (feature, layer) {
            layer.bindPopup(feature.properties.f2)
            layer.on('mouseover', function (e) {
              this.openPopup()
            });
            layer.on('mouseout', function (e) {
              this.closePopup();
            });
            layer.on('click', function (e) {
              map.fitBounds(this.getBounds())
            });
          },
          style: function(feature) {
            switch (feature.properties.f3) {
              case 'beginner': return {color: "#1ae582", weight: 2};
              case 'intermediate' : return {color: "#2441db", weight: 2};
              case 'advanced': return {color: "#2b0600", weight: 2};
              case 'expert': return {color:"#670068", weight: 2};
            }
          }
      }).addTo(map);

